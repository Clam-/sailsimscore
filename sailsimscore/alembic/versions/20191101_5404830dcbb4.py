"""init

Revision ID: 5404830dcbb4
Revises: 
Create Date: 2019-11-01 15:54:44.670821

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5404830dcbb4'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('boat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('resource', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_boat'))
    )
    op.create_table('user',
    sa.Column('_createdip', sa.BINARY(length=16), nullable=True),
    sa.Column('_modip', sa.BINARY(length=16), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('name_unique', sa.Text(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'user', 'teamadmin', name='role'), nullable=False),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('password_hash', sa.BINARY(length=60), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email')),
    sa.UniqueConstraint('name_unique', name=op.f('uq_user_name_unique'))
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('deleted', sa.Boolean(name='deleted'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_comment_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_comment'))
    )
    op.create_table('event',
    sa.Column('_createdip', sa.BINARY(length=16), nullable=True),
    sa.Column('_modip', sa.BINARY(length=16), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('start', sa.DateTime(), nullable=False),
    sa.Column('end', sa.DateTime(), nullable=False),
    sa.Column('current', sa.Boolean(name='current'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('gusts', sa.Enum('none', 'random', 'repeat', 'any', name='gusts'), nullable=False),
    sa.Column('rams', sa.Boolean(name='rams'), nullable=True),
    sa.Column('course', sa.Enum('none', 'CrossWind', 'Trapezoidal', 'Triangular', 'UpDownWind', name='course'), nullable=False),
    sa.Column('bigcourse', sa.Boolean(name='bigcourse'), nullable=True),
    sa.Column('laps', sa.Integer(), nullable=True),
    sa.Column('allowprevious', sa.Boolean(name='allowprevious'), nullable=True),
    sa.Column('windspeed', sa.Numeric(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_event_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_event'))
    )
    op.create_table('recording',
    sa.Column('_createdip', sa.BINARY(length=16), nullable=True),
    sa.Column('_modip', sa.BINARY(length=16), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time', sa.Numeric(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('datetime', sa.DateTime(), nullable=True),
    sa.Column('hash', sa.BINARY(length=20), nullable=True),
    sa.Column('bigcourse', sa.Boolean(name='bigcourse'), nullable=True),
    sa.Column('rams', sa.Boolean(name='rams'), nullable=True),
    sa.Column('laps', sa.Integer(), nullable=True),
    sa.Column('windspeed', sa.Numeric(), nullable=True),
    sa.Column('modified', sa.Boolean(name='modified'), nullable=True),
    sa.Column('course', sa.Enum('none', 'CrossWind', 'Trapezoidal', 'Triangular', 'UpDownWind', name='course'), nullable=False),
    sa.Column('gusts', sa.Enum('none', 'random', 'repeat', 'any', name='gusts'), nullable=False),
    sa.Column('fileloc', sa.Text(), nullable=True),
    sa.Column('deleted', sa.Boolean(name='deleted'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('boat_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['boat_id'], ['boat.id'], name=op.f('fk_recording_boat_id_boat')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_recording_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recording'))
    )
    op.create_table('allowedboats',
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('boat_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['boat_id'], ['boat.id'], name=op.f('fk_allowedboats_boat_id_boat')),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name=op.f('fk_allowedboats_event_id_event'))
    )
    op.create_table('commenteventassoc',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('op', sa.Boolean(name='op'), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], name=op.f('fk_commenteventassoc_comment_id_comment')),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name=op.f('fk_commenteventassoc_event_id_event')),
    sa.PrimaryKeyConstraint('event_id', 'comment_id', name=op.f('pk_commenteventassoc'))
    )
    op.create_table('commentrecassoc',
    sa.Column('recording_id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('op', sa.Boolean(name='op'), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], name=op.f('fk_commentrecassoc_comment_id_comment')),
    sa.ForeignKeyConstraint(['recording_id'], ['recording.id'], name=op.f('fk_commentrecassoc_recording_id_recording')),
    sa.PrimaryKeyConstraint('recording_id', 'comment_id', name=op.f('pk_commentrecassoc'))
    )
    op.create_table('eventrecordings',
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('recording_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name=op.f('fk_eventrecordings_event_id_event')),
    sa.ForeignKeyConstraint(['recording_id'], ['recording.id'], name=op.f('fk_eventrecordings_recording_id_recording'))
    )
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('eventrecordings')
    op.drop_table('commentrecassoc')
    op.drop_table('commenteventassoc')
    op.drop_table('allowedboats')
    op.drop_table('recording')
    op.drop_table('event')
    op.drop_table('comment')
    op.drop_table('user')
    op.drop_table('boat')
    # ### end Alembic commands ###
